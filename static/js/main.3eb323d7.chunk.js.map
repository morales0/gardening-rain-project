{"version":3,"sources":["components/Navbar/Navbar.js","pages/Gardening/Gardening.js","services/openFarmApi.js","App.js","index.js"],"names":["Navbar","className","to","Gardening","useState","query","setQuery","search","setSearch","data","setData","handleSearch","fetch","then","resp","json","queryCrop","console","log","type","placeholder","onChange","e","target","value","onClick","map","crop","attributes","binomial_name","common_names","description","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAGaA,EAAS,WACnB,OACG,sBAAKC,UAAU,SAAf,UACG,qBAAKA,UAAU,QAAf,SACG,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAGH,qBAAID,UAAU,UAAd,UACG,6BACG,cAAC,IAAD,CAAMC,GAAG,aAAT,4BAEH,6BACG,cAAC,IAAD,CAAMA,GAAG,QAAT,oBAEH,6BACG,cAAC,IAAD,CAAMA,GAAG,QAAT,2B,6LCwCAC,EApDG,WAAO,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,OAEOF,mBAAS,OAFhB,mBAEdG,EAFc,KAENC,EAFM,OAGGJ,mBAAS,IAHZ,mBAGdK,EAHc,KAGRC,EAHQ,KAMfC,EAAe,WAClBH,EAAU,WCbE,SAACH,GAClB,OAAOO,MAAM,4CAAD,OAA6CP,IACvDQ,MAAK,SAACC,GAEN,OAAOA,EAAKC,UDWTC,CAAUX,GAAOQ,MAAK,SAACJ,GACpBQ,QAAQC,IAAIT,GACZC,EAAQD,EAAKA,MACbD,EAAU,aAIhB,OACG,gCACG,gCACG,uBAAOW,KAAK,OAAOC,YAAY,kBAC5BC,SAAU,SAACC,GAAD,OAAOhB,EAASgB,EAAEC,OAAOC,UACtC,wBAAQC,QAAS,kBAAMd,KAAvB,uBAES,YAAXJ,GACE,+CACgBF,EADhB,SAIS,UAAXE,GACE,yCAEG,8BACIE,EAAKiB,KAAI,SAACC,GACR,OAAO,4BAMJ,4BAAIA,EAAKC,WAAWC,gBACpB,4BAAIF,EAAKC,WAAWE,eACpB,4BAAIH,EAAKC,WAAWG,qBAVpB,oBEOTC,MAvCf,WAoBC,OACC,eAAC,IAAD,WACC,cAAC,EAAD,IAEA,eAAC,IAAD,WACC,cAAC,IAAD,CAAOC,KAAK,aAAZ,SACC,cAAC,EAAD,MAEG,cAAC,IAAD,CAAOA,KAAK,QAAZ,SACH,0CAEG,cAAC,IAAD,CAAOA,KAAK,QAAZ,SACH,iDChCLC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3eb323d7.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\nimport \"./Navbar.css\"\n\nexport const Navbar = () => {\n   return (\n      <nav className=\"Navbar\">\n         <div className=\"brand\">\n            <Link to=\"/\">Home</Link>\n         </div>\n\n         <ul className=\"navList\">\n            <li>\n               <Link to=\"/gardening\">Garden Stuff</Link>\n            </li>\n            <li>\n               <Link to=\"/rain\">Rain</Link>\n            </li>\n            <li>\n               <Link to=\"/user\">User</Link>\n            </li>\n         </ul>\n      </nav>\n   )\n}\n","import React, { useState } from 'react'\nimport { queryCrop } from '../../services/openFarmApi'\n\nimport styled from 'styled-components/macro'\nimport './Gardening.css'\n\nconst Gardening = () => {\n   const [query, setQuery] = useState(\"\")\n   const [search, setSearch] = useState(\"off\")\n   const [data, setData] = useState([])\n\n\n   const handleSearch = () => {\n      setSearch(\"pending\")\n      // TODO: query cannot have spaces, must replace with plus signs\n      queryCrop(query).then((data) => {\n         console.log(data)\n         setData(data.data)\n         setSearch(\"found\")\n      })\n   }\n\n   return (\n      <div>\n         <div>\n            <input type=\"text\" placeholder=\"Search crops...\"\n               onChange={(e) => setQuery(e.target.value)} />\n            <button onClick={() => handleSearch()}>Search</button>\n         </div>\n         {search === \"pending\" &&\n            <div>\n               Looking for {query}...\n            </div>\n         } \n         {search === \"found\" &&\n            <div>\n               Found!\n               <div key=\"cropsList\">\n                  {data.map((crop) => {\n                     return <div css={`\n                        padding: 10px;\n                        margin-bottom: 12px;\n                        border-bottom: 1px solid #444;\n                        \n                     `}>\n                        <p>{crop.attributes.binomial_name}</p>\n                        <p>{crop.attributes.common_names}</p>\n                        <p>{crop.attributes.description}</p>\n                     </div>\n                  })}\n               </div>\n         \n            </div>\n         }\n      </div>\n   )\n}\n\nexport default Gardening\n","const queryCrop = (query) => {\n\treturn fetch(`https://openfarm.cc/api/v1/crops/?filter=${query}`)\n\t\t.then((resp) => {\n      // Check for errors here\n\t\t\treturn resp.json();\n\t\t})\n};\n\nexport { queryCrop };\n\n","import { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Navbar } from './components';\nimport { Gardening } from './pages';\n\nfunction App() {\n\n  /* const getCrop = () => {\n    fetch(\"https://openfarm.cc/api/v1/crops/?filter=chard\")\n      .then((resp) =>{\n        console.log(resp)\n        return resp.json()\n      })\n      .then((data) => {\n        console.log(data)\n      })\n  }\n\n  useEffect(() => {\n    getCrop()\n    return () => {\n      console.log(\"Cleanup\")\n    }\n  }, []) */\n\n\treturn (\n\t\t<Router>\n\t\t\t<Navbar />\n\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/gardening\">\n\t\t\t\t\t<Gardening />\n\t\t\t\t</Route>\n        <Route path=\"/rain\">\n\t\t\t\t\t<div>Rain!</div>\n\t\t\t\t</Route>\n        <Route path=\"/user\">\n\t\t\t\t\t<div>User!</div>\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}