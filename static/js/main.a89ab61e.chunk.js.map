{"version":3,"sources":["components/CropItem/CropItem.js","components/Navbar/Navbar.js","pages/Gardening/Gardening.js","services/openFarmApi.js","pages/Home/Home.js","App.js","index.js"],"names":["CropItem","props","className","name","src","imgSrc","alt","align","width","description","Navbar","to","Gardening","useState","query","setQuery","search","setSearch","data","setData","handleSearch","e","preventDefault","fetch","then","resp","json","queryCrop","console","log","onSubmit","type","placeholder","onChange","target","value","map","crop","i","attributes","main_image_path","Home","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uaAoBeA,EAjBE,SAACC,GACf,OACG,sBAAKC,UAAU,WAAf,UACG,6BAAKD,EAAME,OAEX,4BAGG,qBAAKC,IAAKH,EAAMI,OAAQC,IAAKL,EAAME,KAChCI,MAAM,OAAOC,MAAM,UAEtB,4BAAIP,EAAMQ,qBCXTC,G,MAAS,WACnB,OACG,sBAAKR,UAAU,SAAf,UACG,qBAAKA,UAAU,QAAf,SACG,cAAC,IAAD,CAAMS,GAAG,IAAT,oBAGH,qBAAIT,UAAU,UAAd,UACG,6BACG,cAAC,IAAD,CAAMS,GAAG,aAAT,4BAEH,6BACG,cAAC,IAAD,CAAMA,GAAG,QAAT,oBAEH,6BACG,cAAC,IAAD,CAAMA,GAAG,QAAT,4B,iaCyDAC,EApEG,WAAM,MAEKC,mBAAS,IAFd,mBAEdC,EAFc,KAEPC,EAFO,OAGOF,mBAAS,OAHhB,mBAGdG,EAHc,KAGNC,EAHM,OAIGJ,mBAAS,IAJZ,mBAIdK,EAJc,KAIRC,EAJQ,KASfC,EAAe,SAACC,GACnBA,EAAEC,iBACFL,EAAU,WClBE,SAACH,GAClB,OAAOS,MAAM,4CAAD,OAA6CT,IACvDU,MAAK,SAACC,GAEN,OAAOA,EAAKC,UDgBTC,CAAUb,GAAOU,MAAK,SAACN,GACpBU,QAAQC,IAAIX,GACZC,EAAQD,EAAKA,MACbD,EAAU,aAKhB,OACG,4BACG,kBAAMa,SAAU,SAACT,GAAD,OAAOD,EAAaC,IAApC,UAMG,iBAAOU,KAAK,OAAOC,YAAY,kBAC5BC,SAAU,SAACZ,GAAD,OAAON,EAASM,EAAEa,OAAOC,UAKtC,wBAAQJ,KAAK,SAAb,oBAEY,YAAXf,GACE,+CACgBF,EADhB,SAIS,UAAXE,GACE,4CAMM,UAAXA,GACE,8BAEG,8BACIE,EAAKkB,KAAI,SAACC,EAAMC,GAAP,OACP,cAAC,EAAD,CACGnC,KAAQkC,EAAKE,WAAWpC,KACxBM,YAAe4B,EAAKE,WAAW9B,YAC/BJ,OAAUgC,EAAKE,WAAWC,iBAH7B,kBAA4BF,QAFzB,mBEjDTG,EARF,WACV,OACG,6CC2CSC,MA1Cf,WAoBC,OACC,eAAC,IAAD,WACC,cAAC,EAAD,IAEA,eAAC,IAAD,WACK,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEN,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACC,cAAC,EAAD,MAEG,cAAC,IAAD,CAAOA,KAAK,QAAZ,SACH,0CAEG,cAAC,IAAD,CAAOA,KAAK,QAAZ,SACH,iDCnCLC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a89ab61e.chunk.js","sourcesContent":["import \"./CropItem.css\"\nimport styled from 'styled-components/macro'\n\nconst CropItem = (props) => {\n   return (\n      <div className=\"CropItem\">\n         <h2>{props.name}</h2>\n         \n         <div css={`\n            display: flex;\n         `}>\n            <img src={props.imgSrc} alt={props.name} \n               align=\"left\" width=\"200px\"\n            />\n            <p>{props.description}</p>\n         </div>\n      </div>\n   )\n}\n\nexport default CropItem\n","import { Link } from 'react-router-dom'\nimport \"./Navbar.css\"\n\nexport const Navbar = () => {\n   return (\n      <nav className=\"Navbar\">\n         <div className=\"brand\">\n            <Link to=\"/\">Home</Link>\n         </div>\n\n         <ul className=\"navList\">\n            <li>\n               <Link to=\"/gardening\">Garden Stuff</Link>\n            </li>\n            <li>\n               <Link to=\"/rain\">Rain</Link>\n            </li>\n            <li>\n               <Link to=\"/user\">User</Link>\n            </li>\n         </ul>\n      </nav>\n   )\n}\n","import React, { useState } from 'react'\nimport { queryCrop } from '../../services/openFarmApi'\n\nimport styled from 'styled-components/macro'\nimport './Gardening.css'\nimport { CropItem } from '../../components'\n\nconst Gardening = () => {\n   //State and variables\n   const [query, setQuery] = useState(\"\")\n   const [search, setSearch] = useState(\"off\")\n   const [data, setData] = useState([])\n\n   // Lifecycle\n\n   // Methods\n   const handleSearch = (e) => {\n      e.preventDefault()\n      setSearch(\"pending\")\n      // TODO: query cannot have spaces, must replace with plus signs\n      queryCrop(query).then((data) => {\n         console.log(data)\n         setData(data.data)\n         setSearch(\"found\")\n      })\n   }\n\n   // Render\n   return (\n      <div css={`padding: 24px 20px; overflow-y: auto;`}>\n         <form onSubmit={(e) => handleSearch(e)}\n            css={`\n               display: flex;\n               align-items: stretch;\n            `}   \n         >\n            <input type=\"text\" placeholder=\"Search crops...\"\n               onChange={(e) => setQuery(e.target.value)} \n               css={`\n                  padding: 5px 8px;\n               `}\n               />\n            <button type=\"submit\">Search</button>\n\n            {search === \"pending\" &&\n               <div>\n                  Looking for {query}...\n               </div>\n            }\n            {search === \"found\" &&\n               <div>\n                  Found!\n               </div>\n            } \n         </form>\n         \n         {search === \"found\" &&\n            <div>\n               {/* TODO: Make into separate component */}\n               <div key=\"cropsList\">\n                  {data.map((crop, i) => \n                     <CropItem key = {`cropItem${i}`} \n                        name = {crop.attributes.name}\n                        description = {crop.attributes.description}\n                        imgSrc = {crop.attributes.main_image_path}\n                     />\n                  )}\n               </div>\n         \n            </div>\n         }\n      </div>\n   )\n}\n\nexport default Gardening\n","const queryCrop = (query) => {\n\treturn fetch(`https://openfarm.cc/api/v1/crops/?filter=${query}`)\n\t\t.then((resp) => {\n      // Check for errors here\n\t\t\treturn resp.json();\n\t\t})\n};\n\nexport { queryCrop };\n\n","import React from 'react'\n\nconst Home = () => {\n   return (\n      <div>\n         My portal\n      </div>\n   )\n}\n\nexport default Home\n","import { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Navbar } from './components';\nimport { Gardening, Home } from './pages';\n\nfunction App() {\n\n  /* const getCrop = () => {\n    fetch(\"https://openfarm.cc/api/v1/crops/?filter=chard\")\n      .then((resp) =>{\n        console.log(resp)\n        return resp.json()\n      })\n      .then((data) => {\n        console.log(data)\n      })\n  }\n\n  useEffect(() => {\n    getCrop()\n    return () => {\n      console.log(\"Cleanup\")\n    }\n  }, []) */\n\n\treturn (\n\t\t<Router>\n\t\t\t<Navbar />\n\n\t\t\t<Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n\t\t\t\t<Route path=\"/gardening\">\n\t\t\t\t\t<Gardening />\n\t\t\t\t</Route>\n        <Route path=\"/rain\">\n\t\t\t\t\t<div>Rain!</div>\n\t\t\t\t</Route>\n        <Route path=\"/user\">\n\t\t\t\t\t<div>User!</div>\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}