{"version":3,"sources":["components/AnswerChoice/AnswerChoice.js","components/CropItem/CropItem.js","components/Navbar/Navbar.js","components/QuizQuestion/QuizQuestion.js","pages/Gardening/Gardening.js","services/openFarmApi.js","data/questions.js","pages/Quiz/Quiz.js","pages/MyCrops/MyCrops.js","pages/Rain/Rain.js","App.js","index.js"],"names":["CorrectAnswerChoice","props","useState","selected","setSelected","className","onClick","onSelect","questionAnswered","answerIndex","choice","info","IncorrectAnswerChoice","AnswerChoice","correct","CropItem","name","src","imgSrc","alt","align","width","description","Navbar","to","QuizQuestion","question","questionInd","handleSelect","background","q","choices","map","i","check","answerInd","console","log","Gardening","query","setQuery","search","setSearch","data","setData","handleSearch","e","preventDefault","fetch","then","resp","json","queryCrop","onSubmit","type","placeholder","onChange","target","value","crop","attributes","main_image_path","questions","answer","Quiz","score","setScore","setQuestion","questionIndex","setQuestionIndex","setQuestionAnswered","ans","as","length","MyCrops","listofCrp","forEach","element","Rain","rainfall","setRainfall","rWidth","setRWidth","rLength","setRLength","rArea","setRArea","prec","setPrec","calculated","setCalculated","numberWithCommas","x","toString","replace","class","id","href","event","height","frameborder","scrolling","marginheight","marginwidth","title","App","list","basename","process","exact","path","listOfCrp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed2b0b82.chunk.js","sourcesContent":["import {useState} from 'react'\nimport './AnswerChoice.css'\n\nimport styled from \"styled-components/macro\"\n\nconst AnswerChoice = (props) => {\n   if (props.correct) {\n      return <CorrectAnswerChoice {...props} />\n   } else {\n      return <IncorrectAnswerChoice {...props} />\n   }\n}\n\nconst CorrectAnswerChoice = (props) => {\n   const [selected, setSelected] = useState(false)\n\n   const onSelect = () => {\n      setSelected(true)\n      props.onSelect()\n   }\n\n   return (\n      <li className=\"answerChoice correctAnswerChoice\" onClick={() => onSelect()} css={`\n         ${props.questionAnswered ? 'background-color: #b8ffb8;' : ''}\n         &:hover {\n            ${!selected && !props.questionAnswered ? 'background-color: #ddebc5;' : ''}\n         }\n      `}>\n         {/* <input type=\"radio\" id={props.choice} name=\"Quiz\" value={props.choice} /> */}\n\n         <div css={`\n            display: flex;\n            align-items: baseline;\n         `}>\n            <h3 className=\"answerIndex\">\n               {props.answerIndex}.\n            </h3>\n            <p>\n               {props.choice}\n            </p>\n         </div>\n         {\n            props.questionAnswered &&\n            <p>\n               {props.info}\n            </p>\n         }\n      </li>\n   )\n}\n\nconst IncorrectAnswerChoice = (props) => {\n   const [selected, setSelected] = useState(false)\n\n   const onSelect = () => {\n      setSelected(true)\n      props.onSelect()\n   }\n\n   return (\n      <li className=\"answerChoice\" onClick={() => onSelect()} css={`\n         ${selected ? 'background-color: #ffa3a3;' : ''}\n         &:hover {\n            ${!selected && !props.questionAnswered ? 'background-color: #ddebc5;' : ''}\n         }\n      `}>\n         {/* <input type=\"radio\" id={props.choice} name=\"Quiz\" value={props.choice} /> */}\n         <div css={`\n            display: flex;\n            align-items: baseline;\n         `}>\n            <h3 className=\"answerIndex\">\n               {props.answerIndex}.\n            </h3>\n            <p>\n               {props.choice}\n            </p>\n         </div>\n      </li>\n   )\n}\n\nexport default AnswerChoice\n","import \"./CropItem.css\"\nimport styled from 'styled-components/macro'\n\nconst CropItem = (props) => {\n   return (\n      <div className=\"CropItem\">\n         <h2>{props.name}</h2>\n         \n         <div css={`\n            display: flex;\n         `}>\n            <img src={props.imgSrc} alt={props.name} \n               align=\"left\" width=\"200px\"\n            />\n            <p>{props.description}</p>\n         </div>\n      </div>\n   )\n}\n\nexport default CropItem\n","import { Link } from 'react-router-dom'\nimport \"./Navbar.css\"\n\nexport const Navbar = () => {\n   return (\n      <nav className=\"Navbar\">\n         <div className=\"brand\">\n            <Link to=\"/crops\">Home</Link>\n         </div>\n\n         <ul className=\"navList\">\n            <li>\n               <Link to=\"/crops\">Crops</Link>\n            </li>\n            <li>\n               <Link to=\"/quiz\">Quiz</Link>\n            </li>\n            <li>\n               <Link to=\"/rain\">Rain</Link>\n            </li>\n         </ul>\n      </nav>\n   )\n}\n","import AnswerChoice from \"../AnswerChoice/AnswerChoice\";\nimport './QuizQuestion.css'\n\nconst QuizQuestion = ({ question, questionInd, handleSelect, questionAnswered }) => {\n\tconst onSelect = (choice) => {\n      let check = choice === question.choices[question.answerInd]\n\n\t\tif (check) {\n\t\t\tconsole.log('Correct!');\n         // Highlight red\n         // Highlight correc answer\n         // Update score\n         // Alert quiz component question has been answered\n\t\t} else {\n\t\t\tconsole.log('Incorrect!');\n         //Same as above\n\t\t}\n\n      handleSelect(check)\n\t};\n\n\treturn (\n\t\t<div className=\"quizQuestion\">\n         <div>\n\t\t\t\t<p>\n\t\t\t\t\t{question.background}\n\t\t\t\t</p>\n\t\t\t   <h2 className=\"quizQuestionHeader\">{question.q}</h2>\n         </div>\n\t\t\t<ul className=\"answerChoiceList\">\n\t\t\t\t{question.choices.map((choice, i) => {\n               let check = choice === question.choices[question.answerInd]\n\n               return <AnswerChoice key={`${questionInd}choice${i}`} answerIndex={i+1} choice={choice} info={check ? question.info : null}\n                  correct={check} onSelect={() => onSelect(choice)} questionAnswered={questionAnswered}/>\n            })}\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nexport default QuizQuestion;\n","import React, { useState } from 'react'\nimport { queryCrop } from '../../services/openFarmApi'\n\nimport styled from 'styled-components/macro'\nimport './Gardening.css'\nimport { CropItem } from '../../components'\n\nconst Gardening = () => {\n   //State and variables\n   const [query, setQuery] = useState(\"\")\n   const [search, setSearch] = useState(\"off\")\n   const [data, setData] = useState([])\n\n   // Lifecycle\n\n   // Methods\n   const handleSearch = (e) => {\n      e.preventDefault()\n      setSearch(\"pending\")\n      // TODO: query cannot have spaces, must replace with plus signs\n      queryCrop(query).then((data) => {\n         console.log(data)\n         setData(data.data)\n         setSearch(\"found\")\n      })\n   }\n\n   // Render\n   return (\n      <div css={`padding: 24px 20px; overflow-y: auto;`}>\n         <form onSubmit={(e) => handleSearch(e)}\n            css={`\n               display: flex;\n               align-items: stretch;\n            `}   \n         >\n            <input type=\"text\" placeholder=\"Search crops...\"\n               onChange={(e) => setQuery(e.target.value)} \n               css={`\n                  padding: 5px 8px;\n               `}\n               />\n            <button type=\"submit\">Search</button>\n\n            {search === \"pending\" &&\n               <div>\n                  Looking for {query}...\n               </div>\n            }\n            {search === \"found\" &&\n               <div>\n                  Found!\n               </div>\n            } \n         </form>\n         \n         {search === \"found\" &&\n            <div>\n               {/* TODO: Make into separate component */}\n               <div key=\"cropsList\">\n                  {data.map((crop, i) => \n                     <CropItem key = {`cropItem${i}`} \n                        name = {crop.attributes.name}\n                        description = {crop.attributes.description}\n                        imgSrc = {crop.attributes.main_image_path}\n                     />\n                  )}\n               </div>\n         \n            </div>\n         }\n      </div>\n   )\n}\n\nexport default Gardening\n","const queryCrop = (query) => {\n\treturn fetch(`https://openfarm.cc/api/v1/crops/?filter=${query}`)\n\t\t.then((resp) => {\n      // Check for errors here\n\t\t\treturn resp.json();\n\t\t})\n};\n\nexport { queryCrop };\n\n","const questions = [\n   {\n      type: \"MC\",\n      background: \"Zones 2 and 3 are one of the most challenging zones to garden in because of their low temperatures. The cold weather can drop down to -50 °F, which means that delicate plants will have difficulty surviving outdoors. But don’t give up! Test your knowledge on the delicious AND hardy options that are viable in this zone with the quiz below.\",\n      q: \"What type of plant would grow the best in Zones 2 and 3?\",\n      choices: [\"Greens like spinach and kale\", \"Citrus trees to grow lemons, oranges, and even kumquats\", \"Squashes like pumpkin or butternut squash\"],\n      answer: \"Greens like spinach and kale\",\n      answerInd: 0,\n\t   info: \"Leafy greens are a great choice for a cool growing climate! They are versatile and have a fairly long growth season, allowing each plant to be harvested many times. Crops that need heat to ripen such as citrus and squash do better in warm states where they can truly thrive.\"\n   },\n   {\n      type: \"MC\",\n      background: \"Zones 2 and 3 are one of the most challenging zones to garden in because of their low temperatures. The cold weather can drop down to -50 °F, which means that delicate plants will have difficulty surviving outdoors. But don’t give up! Test your knowledge on the delicious AND hardy options that are viable in this zone with the quiz below.\",\n      q: \"But, what if I don’t want to grow spinach?! That’s okay. Which one of these would work well in your zone?\",\n      choices: [\"All sorts of cucumbers, from pickle cucumbers to lemon cucumbers (cucumbers that look like  lemons, not the other way around!)\", \"Root vegetables like radishes, rutabaga, and beets\", \"Regular-sized cabbages or mini-cabbages (okay, brussels sprouts)\",\"All of the above!\"],\n      answer: \"All of the above!\",\n      answerInd: 3,\n\t   info: \"There are plenty of cold-hardy plants that can thrive in the low temperatures of Zones 2 and 3. Leafy greens are excellent sources of nutrients, fiber, and vitamins. Crunchy root vegetables like radishes are perfect on salads, or on their own for a healthy snack. And who could refuse a fresh cucumber? Use the search feature of this tool to learn about the planting requirements of any crops that caught your eye!\"\n   },\n   {\n      type: \"MC\",\n      background: \"Zone 4 has a fairly short summer season because of relatively cool temperatures year-round, but can still accommodate a healthy variety of crops in your backyard. From bell peppers to blueberries, there are a rainbow of colors to enjoy. Take the quiz to get inspired with some Zone 4 fruits and veggies!\",\n      q: \"Making some delicious dinner entrees tonight? If you live in Zone 4, which herbs and flavors might you run to get from your garden?\",\n      choices: [\"Parsley, thyme and sage for a Thanksgiving stuffing\", \"Chives, basil and garlic for the lasagna of your dreams\", \"Dill for some fresh cucumber pickles\", \"Mint and fennel for a Mediterranean mezze\",\"Cilantro for burrito night\", \"All of the above!\"],\n      answer: \"All of the above!\",\n      answerInd: 5,\n\t   info: \"Most herbs thrive in the cool temperatures of Zone 4, meaning that your soups never have to be bland in this part of the country. Enjoy experimenting with new flavors and feeling superior that you don’t have to buy overpriced herbs from the grocery store.\"\n   },\n   {\n      type: \"MC\",\n      background: \"Zone 4 has a fairly short summer season because of relatively cool temperatures year-round, but can still accommodate a healthy variety of crops in your backyard. From bell peppers to blueberries, there are a rainbow of colors to enjoy. Take the quiz to get inspired with some Zone 4 fruits and veggies!\",\n      q: \"Let’s talk about some vegetables for your main course. What sounds right to you?\",\n      choices: [\"Squash like pumpkin, zucchini and butternut or winter squash to make the best fall soup (and the ultimate harvest photoshoot to go with it!)\", \"Root vegetables like potatoes, radishes and beets\", \"Fruit trees with apples, plums, peaches and pears\", \"Greens, greens, and more greens for your perfect salad mix of spinach, Swiss chard, and lettuce\", \"All of the above!\"],\n      answer: \"All of the above!\",\n      answerInd: 4,\n\t   info: \"All of the above is a cop-out answer, but there really are a plethora of tasty options for this zone. Don’t let fear of the cold season prevent you from growing plants of all varieties!\"\n   }\n]\n\nexport default questions","import React, { useState } from 'react'\n\nimport './Quiz.css'\nimport styled from 'styled-components/macro'\nimport { QuizQuestion } from '../../components'\nimport questions from '../../data/questions'\nimport { Link } from 'react-router-dom'\n\nconst Quiz = () => {\n   const [score, setScore] = useState(0)\n   const [question, setQuestion] = useState(questions[0])\n   const [questionIndex, setQuestionIndex] = useState(0)\n   const [questionAnswered, setQuestionAnswered] = useState(false)\n\n   const handleSelect = (ans) => {\n      // Update score if correct and hasn't answered yet\n      if(!questionAnswered){\n         setQuestionAnswered(true)\n\n         if (ans) {\n            setScore(score + 1)\n         }\n      }\n   }\n\n   const handleNext = () => {\n      setQuestion(questions[questionIndex + 1])\n      setQuestionIndex(questionIndex + 1)\n      setQuestionAnswered(false)\n   }\n\n   const handlePrev = () => {\n      setQuestion(questions[questionIndex - 1])\n      setQuestionIndex(questionIndex - 1)\n      setQuestionAnswered(false)\n   }\n\n   return (\n      <div className=\"Quiz\">\n         <div className=\"QuizBox\">\n            <div css={`\n               display: flex;\n               justify-content: space-between;\n            `}>\n               <div>Question Number: {questionIndex + 1}</div>\n               <div>Score: {score}</div>\n            </div>\n            <QuizQuestion question={question} questionInd={questionIndex} handleSelect={handleSelect} questionAnswered={questionAnswered}/>\n            <div css={`\n                  display: flex;\n                  justify-content: space-between;\n                  margin-top:6px;\n\n                  & button {\n                     padding: 8px;\n                     background: none;\n                     border: 1px solid black;\n                     border-radius: 3px;\n                     cursor: pointer;\n                  }\n\n                  & button:hover {\n                     background: #444;\n                     color: white;\n                  }\n               `}>\n                  {/* <div>{questionIndex !== 0 && <button onClick={() => handlePrev()}>Previous</button>}</div> */}\n                  <Link as=\"button\" to=\"/crops\">Look for Crops</Link>\n                  <div>{questionIndex !== questions.length - 1 && questionAnswered && \n                     <button onClick={() => handleNext()}>Next</button>}\n                  </div>\n            </div>\n         </div>\n      </div>\n   )\n}\n\nexport default Quiz\n","import React, { useState } from \"react\";\n\nconst MyCrops = (props) => {\n\n  return (\n    <div>\n      {props.listofCrp.forEach((element, i) => {\n        return (\n          <div>\n            <p1>\n              {i}. {element}\n            </p1>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default MyCrops;","\nimport React, { useState } from 'react'\nimport './Rain.css'\n\nconst Rain = () => {\n   const [rainfall, setRainfall] = useState(\"\")\n   const [rWidth, setRWidth] = useState(\"\")\n   const [rLength, setRLength] = useState(\"\")\n   const [rArea, setRArea] = useState(\"\")\n   const [prec, setPrec] = useState(0)\n   \n   const [calculated, setCalculated] = useState(\"false\")\n\n   function calcRainwater () {\n      let tmp1 = prec*2\n      \n      setCalculated(\"true\")\n      if(prec === \"\"){\n         setCalculated(\"error\")\n      } else {\n         if(rArea !== \"\"){\n            setRainfall(rArea*prec)\n         } else if (rWidth !== \"\" && rLength !== \"\") {\n            setRainfall(rWidth*rLength*prec)\n         } else {\n            setCalculated(\"error\")\n         }\n      }\n      \n      \n   }\n   function numberWithCommas(x) {\n      return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n   }\n   return (\n      <div class=\"row\" id=\"i90k\">\n  <div class=\"cell\" id=\"i3pb\">\n    <div id=\"iayf\">\n      <b>Roof Rain Water Calculator\n      </b>\n    </div>\n    <p class=\"paragraph\" id=\"iorj\">Using a rain water collection system is an great way to have a positive impact on your enviroment! When you collect rainwater, you can put it to use in all sorts of ways. By using it for things like gardening, you reduce your draw from water utilities, saving energy and money along the way! Additionally, runoff is a huge enviromental concern in our ever more urban enviroments. By collecting water during rainstorms you can help reduce runoff that would otherwise be caused by your roof. If you want to learn more about the enviromental impacts of runoff click <a href=\"https://www.cbf.org/issues/polluted-runoff/index.html#:~:text=Urban%20and%20suburban%20stormwater%20runoff,Soil%20and%20sediment\">here!</a> This calculator is a tool you can use to help estimate how much water your roof could produce in a year!\n    </p>\n    <div class=\"row\" id=\"izzc\">\n      <div class=\"cell\" id=\"i5abt\">\n        <form class=\"form\" id=\"i5rob\">\n          <div class=\"row\" id=\"ihw4u\">\n            <div class=\"cell\">\n              <div id=\"iv0ej\">\n                <b>Please Enter:\n                </b>\n              </div>\n              <div class=\"row\" id=\"ixdhq\">\n                <div class=\"cell\" id=\"ipzv7\">\n                  <label class=\"label\" id=\"ifl63\">Total Roof Area</label>\n                  <input onChange={event => setRArea(event.target.value)} placeholder=\"Roof area in square meters\" type=\"number\" class=\"input\" id=\"i8wr3\"/>\n                  <div id=\"ijy6g\">\n                    <b>Or:\n                    </b>\n                  </div>\n                  <label class=\"label\" id=\"isn8w\">Roof Length</label>\n                  <input onChange={event => setRLength(event.target.value)} placeholder=\"Roof length in meters\" type=\"number\" class=\"input\" id=\"icx3j\"/>\n                  <label class=\"label\" id=\"it9wg\">Roof Width</label>\n                  <input onChange={event => setRWidth(event.target.value)}  name=\"\" placeholder=\"Roof width in meters\" type=\"number\" class=\"input\" id=\"ijvaf\"/>\n                </div>\n              </div>\n              <div class=\"row\" id=\"i8e9t\">\n                <div class=\"cell\" id=\"ie2qg\">\n                  <div id=\"iwypk\">\n                    <b>Home&#039;s Yearly Precipitation\n                    </b>\n                  </div>\n                  <label class=\"label\" id=\"iszuhx\">Use the map and legend on the right to estimate your home&#039;s yearly precipitation!</label>\n                  <input onChange={event => setPrec(event.target.value)} placeholder=\"Precipitation in millimeters\" type=\"number\" class=\"input\" id=\"i30zj\"/>\n                </div>\n              </div>\n              <div class=\"form-group\" id=\"icyfr\">\n                <button onClick={calcRainwater} type=\"button\" class=\"button\" id=\"i2wy9\">Calculate</button>\n              </div>\n              {calculated === \"error\" &&\n                  <p>Check that all necessary fields have been filled in!</p>\n               }\n            </div>\n            <div class=\"cell\" id=\"ivelu\">\n              <div id=\"iwemu\">\n                <div class=\"embed-container\">\n                  <iframe width=\"500\" height=\"400\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\" title=\"BitCamp Map 1\" src=\"//bwo2bytcyp53z5sp.maps.arcgis.com/apps/Embed/index.html?webmap=7195beb922324f0ca0fecaf284da1d7c&extent=-125.3977,25.9344,-60.4905,54.1213&home=true&zoom=true&previewImage=false&scale=true&search=true&searchextent=true&legend=true&disable_scroll=true&theme=light\"></iframe>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\" id=\"ipak6\">\n          </div>\n          <div class=\"form-group\" id=\"i9q8e\">\n          </div>\n          <div class=\"form-group\" id=\"ihl3p\">\n          </div>\n          <div class=\"form-group\">\n          </div>\n        </form>\n        {calculated === \"true\" &&\n               <div class=\"row\" id=\"i9j76\">\n                  <div class=\"cell\" id=\"i24ah\">\n                     <div id=\"iwvki\">Estimated Yearly Water Collection:\n                     </div>\n                     <div class=\"row\" id=\"iee4p\">\n                     <div class=\"cell\" id=\"inlgx\">\n                        <div id=\"i1naj\">{numberWithCommas(rainfall)} Liters\n                        </div>\n                     </div>\n                     <div class=\"cell\" id=\"iyqlza\">\n                        <div id=\"ie251\">What can you do with all this water? Well, you can:\n                        </div>\n                        <div id=\"ieqy6t\">- Fill a watering can {numberWithCommas(rainfall/10)} times over\n                           <div>- Flush a toilet {numberWithCommas(rainfall/5)} times\n                           </div>\n                           <div>- Fill a 12ft x 12ft pool {rainfall/20000} times\n                           </div>\n                        </div>\n                     </div>\n                     </div>\n                  </div>\n               </div>\n            }\n      </div>\n    </div>\n  </div>\n</div>\n   )\n}\n\nexport default Rain\n","import { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Navbar } from './components';\nimport { Gardening, Home, Quiz, MyCrops, Rain } from './pages';\n\nfunction App() {\n  const [list, setList] = useState([])\n  /* const getCrop = () => {\n    fetch(\"https://openfarm.cc/api/v1/crops/?filter=chard\")\n      .then((resp) =>{\n        console.log(resp)\n        return resp.json()\n      })\n      .then((data) => {\n        console.log(data)\n      })\n  }\n\n  useEffect(() => {\n    getCrop()\n    return () => {\n      console.log(\"Cleanup\")\n    }\n  }, []) */\n\n\treturn (\n\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t<Navbar />\n\n\t\t\t<Switch>\n        <Route exact path=\"/\">\n          <Gardening />\n        </Route>\n\t\t\t\t<Route path=\"/crops\">\n\t\t\t\t\t<Gardening />\n\t\t\t\t</Route>\n        <Route path=\"/rain\">\n        <Rain />\n\t\t\t\t</Route>\n        <Route path=\"/user\">\n\t\t\t\t\t<div>{process.env.PUBLIC_URL}!</div>\n\t\t\t\t</Route>\n        <Route path=\"/quiz\">\n\t\t\t\t\t<Quiz />\n\t\t\t\t</Route>\n        <Route path=\"/mycrops\">\n          <MyCrops listOfCrp={list}/>\n        </Route>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}